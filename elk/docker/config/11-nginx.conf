filter {
  if [type] == "nginx-access-standard" {
    grok {
      match => {"message" => "%{NGINXACCESS}"}
    }
    date {
      locale => "en"
      match => [ "logtime", "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
  }
  if [type] == "nginx-error" {
    grok {
      match => {"message" => "%{NGINXERROR}"}
    }
    date {
      locale => "en"
      match => [ "logtime", "yyyy/MM/dd HH:mm:ss" ]
    }
  }
  if [type] == "nginx-access" {
    grok {
      match => {"message" => "\"%{HTTPDATE:logtime}\" client=%{IPORHOST:clientip} method=%{WORD:verb} request=\"%{WORD:verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:httpversion}\" request_length=(?:%{NUMBER:request_length}|-) status=(?:%{NUMBER:response}|-) bytes_sent=(?:%{NUMBER:bytes_sent}|-) body_bytes_sent=(?:%{NUMBER:body_bytes_sent}|-) referer=(?:(?:%{URI:referer}|-)|%{QS:referer}) user_agent=%{QS:agent} upstream_addr=(?:\"%{DATA:upstream}\"|-) upstream_status=(?:%{NUMBER:upstream_status}|-) request_time=(?:%{NUMBER:request_time}|-) upstream_response_time=(?:%{NUMBER:upstream_response_time}|-) upstream_connect_time=(?:%{NUMBER:upstream_connect_time}|-) upstream_header_time=(?:%{NUMBER:upstream_header_time}|-) scheme=%{WORD:scheme}" }
    }
    date {
      locale => "en"
      match => [ "logtime", "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
    mutate {
      convert => { "body_bytes_sent" => "integer" }
      convert => { "bytes_sent" => "integer" }
      convert => { "request_length" => "integer" }
      convert => { "request_time" => "float" }
      convert => { "upstream_connect_time" => "float" }
      convert => { "upstream_header_time" => "float" }
      convert => { "upstream_response_time" => "float" }
    }
  }

}
